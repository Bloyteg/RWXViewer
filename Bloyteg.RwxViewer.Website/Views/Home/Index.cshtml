@using System.Web.UI.WebControls
@{
    ViewBag.Title = "RWX Viewer by Byte";
}

@section scripts
{
    <script src="@Url.Content("~/Scripts/jquery-2.1.1.min.js")"></script>
    <script src="@Url.Content("~/Scripts/gl-matrix-min.js")"></script>
    <script src="@Url.Content("~/Scripts/knockout-3.1.0.js")"></script>
    <script src="@Url.Content("~/Scripts/Bloyteg.RwxViewer.Renderer.js")"></script>
}


<div id="renderArea">
    <canvas id="viewport">
        Your browser does not support the HTML 5 Canvas element.
    </canvas>

    <h1 id="loading">Loading...</h1>

    <div id="error">
        <span id="errorText" data-bind="text: errorMessage"></span><br />
        <a href="http://github.com/Bloyteg/RWXViewer/issues">Report an Issue</a> / <a href="#" data-bind="click: hideError">Close</a>
    </div>
</div>

<div id="header">
    <h2>RWX Viewer</h2>
    <div id="toolbar">
        <img src="@Url.Content("~/Content/appbar.camera.png")" alt="Take Screenshot" />
        <img src="@Url.Content("~/Content/appbar.link.png")" alt="Link to Current Model" />
    </div>
</div>

<div id="sidebar">
    <div id="sidebarSpacer"></div>
    <div id="modelSelection" class="group">
        <div class="header">Model Selection</div>
        <div class="content">
            <div class="optionDropdown">
                <label for="selectWorld">World:</label>
                <select id="selectWorld" data-bind="options: worlds, optionsText: 'name', optionsCaption: '(None)', value: selectedWorld, enabled: worlds().length > 0"></select>
            </div>

            <div class="optionDropdown">
                <label for="selectType">Type:</label>
                <select id="selectType" data-bind="options: types, optionsText: 'name', value: selectedType, enable: models().length > 0"></select>
            </div>

            <div class="optionDropdown">
                <label for="selectModel">Object:</label>
                <select id="selectModel" data-bind="options: modelsByType, optionsText: 'name', optionsCaption: '(None)', value: selectedModel, enable: models().length > 0"></select>
            </div>

            <div class="optionDropdown" data-bind="visible: selectedModel() && selectedType().type === 1">
                <label for="selectAnimation">Animation:</label>
                <select id="selectAnimation" data-bind="options: animations, optionsText: 'name', optionsCaption: '(None)', value: selectedAnimation"></select>
            </div>
        </div>
    </div>

    <div id="camera" class="group">
        <div class="header">Camera Controls</div>
        <div class="content">
            <button id="resetCamera" data-bind="click: resetCamera">Reset Camera</button>
        </div>
    </div>

    <div id="light" class="group">
        <div class="header">Lighting Controls</div>
        <div class="content"></div>
    </div>

    <div id="settings" class="group">
        <div class="header">Settings</div>
        <div class="content">
            <div class="optionCheck">
                <label for="showModelOrigin">Show Model Origin:</label>
                <input id="showModelOrigin" type="checkbox" />
            </div>

            <div class="optionCheck">
                <label for="showCameraTarget">Show Camera Target:</label>
                <input id="showCameraTarget" type="checkbox" />
            </div>

            <div class="optionCheck">
                <label for="showBoundingBox">Show Bounding Box:</label>
                <input id="showBoundingBox" type="checkbox" data-bind="checked: showBoundingBox" />
            </div>
        </div>
    </div>

    <div id="controls">
        <div class="header">Controls</div>
        <div class="content">
            Left Mouse: <span style="float: right">Rotate</span><br />
            Right Mouse: <span style="float: right">Pan</span><br />
            Mouse Wheel: <span style="float: right">Zoom</span>
        </div>
    </div>
</div>

<script src="@Url.Content("~/Scripts/viewer.js")"></script>
